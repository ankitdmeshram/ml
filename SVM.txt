# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, precision_score, confusion_matrix
from sklearn.neighbors import KNeighborsClassifier

# Load the dataset
data = pd.read_csv('emails.csv')

# Identify the correct column name for the target variable
target_column_name = 'Prediction'

# Exclude non-numeric columns
X = data.select_dtypes(include=['number']).drop(target_column_name, axis=1)# Features
y = data[target_column_name] # Target variable

# Split the data into training and testing sets

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the SVM classifier
svm_classifier = SVC(kernel='linear', C=1)
svm_classifier.fit(X_train, y_train)

# Make predictions with SVM
y_pred_svm = svm_classifier.predict(X_test)

# Evaluate the SVM model

# Calculate confusion matrix for SVM
print("Confusion Matrix")
print(confusion_matrix(y_test, y_pred_svm))

# Calculate accuracy for SVM
svm_accuracy = accuracy_score(y_test, y_pred_svm)
print(f"SVM Accuracy: {svm_accuracy * 100:.2f}%")

# Calculate precision for SVM
svm_precision = precision_score(y_test, y_pred_svm)
print(f"SVM Precision: {svm_precision * 100:.2f}%")